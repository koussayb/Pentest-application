import React, { useEffect, useState } from "react";
import { makeStyles } from "@material-ui/core/styles";
import AppBar from "@material-ui/core/AppBar";
import Toolbar from "@material-ui/core/Toolbar";
import Typography from "@material-ui/core/Typography";
import Button from "@material-ui/core/Button";
import Card from "@material-ui/core/Card";
import axios from "axios";
import CardContent from "@material-ui/core/CardContent";
import TextField from "@material-ui/core/TextField";
import Select from "@material-ui/core/Select";
import MenuItem from "@material-ui/core/MenuItem";
import { useHistory } from "react-router-dom";

const useStyles = makeStyles((theme) => ({
  root: {
    flexGrow: 1,
  },
  menuButton: {
    marginRight: theme.spacing(5),
  },
  title: {
    flexGrow: 1,
  },
}));
const useStyles1 = makeStyles({});

export default function ButtonAppBar() {
    const history = useHistory();
    const token = localStorage.getItem("token");
  if (token === null) {
    history.push("/login");
  }
  const classes = useStyles();
  const classes1 = useStyles1();
  const [project, setPorject] = useState();
  const [connector, setConnector] = useState();
  const [projectVal, setPorjectVal] = useState();
  const [connectorVal, setConnectorVal] = useState();

  const addInfrastructureScan = (event) => {
    event.preventDefault();
    const target = document.getElementById("target").value;
    const project = document.getElementById("project").value;
    const connctor = document.getElementById("connctor").value;
    const dateObject = new Date(Date.now())
    const humanDateFormat = dateObject.toLocaleString()
   
    const data = {
      total: "",
      date: humanDateFormat,
      target: target,
      high: false,
      medium: false,
      low: false,
      idp:projectVal,
      idc:connectorVal
    }
  
  
    axios.post(`http://127.0.0.1:8000/infrastructures`, data, {
      headers: {
        Authorization: localStorage.getItem("token"),
      },
    }).then(res => {
      if (res.data.status === 403) {
        localStorage.clear()
      }
    
    })

    
  };
  useEffect(() => {
    axios
      .get(`http://127.0.0.1:8000/projects`, {
        headers: {
          Authorization: localStorage.getItem("token"),
        },
      }).then(res => {
        if (res.data.status === 403) {
          localStorage.clear()
        }
        else{
          setPorject(res.data.data)
        }
      })
  }, []);
  useEffect(() => {
    axios
      .get(`http://127.0.0.1:8000/connectors`, {
        headers: {
          Authorization: localStorage.getItem("token"),
        },
      }).then(res => {
        if (res.data.status === 403) {
          localStorage.clear()
        }
        else{
          setConnector(res.data.data)
        }
      })
  }, []);

  return (
    <div className={classes.root}>
      <AppBar style={{ background: "rgb(35, 0, 117)" }} position="static">
        <Toolbar>
          <Typography variant="h6" className={classes.title}>
            Infrastructure Scan
          </Typography>
          <Button color="inherit" onClick={addInfrastructureScan}>Launch </Button>
        </Toolbar>
      </AppBar>
      <Card
        style={{ marginTop: 10, marginLeft: "30%", width: 500, height: 450 }}
        className={classes1.root}
      >
        <CardContent>
          <div style={{ margin: 70 }}>
            <h4>Target</h4>
            <TextField
            id="target"
              style={{ paddingRight: 100, minWidth: 350 }}
              className="standard-basic"
              label="0.0.0.0"
            />{" "}
            <br />
            <br />
            <br />
            <h4>Project</h4>
            <Select
            id="project"
              labelId="demo-simple-select-label"
              onChange={(e) => setPorjectVal(e.target.value)}
            >
              {project?.map((item) => (
                <MenuItem  value={item?.id}>
                  {item?.description}
                </MenuItem>
              ))}
            </Select>
            <br /><br /><br />
            <h4>Connector</h4>
            <Select
              id="connctor"
              labelId="demo-simple-select-label"
              onChange={(e) =>{ setConnectorVal(e.target.value)
              console.log(connectorVal)}}
            >
              {connector?.map((item) => (
                <MenuItem value={item?.id}>
                  {item?.name}
                </MenuItem>
              ))}
            </Select>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
